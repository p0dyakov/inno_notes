---
title: "1. Truth Tables, Disjunctive Normal Form (DNF), Conjunctive Normal Form (CNF)"
author: "Zakhar Podyakov"
date: "September 16, 2025"
format: html
---

#### 1. Summary

##### 1.1 Propositions and Truth Tables
A **proposition** is a statement that can be definitively classified as either **True** or **False**. In a computational context, we represent True with `1` and False with `0`. A **truth table** is a systematic way to list all possible outcomes of a logical formula by considering every combination of truth values for its variables.

##### 1.2 Logical Operators
We can combine propositions using logical operators to form more complex formulas.

*   **Negation (`¬` or NOT):** Inverts the truth value of a proposition.

    | $P$ | $\neg P$ |
    |:---:|:---:|
    | 0   | 1   |
    | 1   | 0   |

*   **Conjunction (`&` or `∧` or AND):** True only if *both* propositions are true.

    | $P_1$ | $P_2$ | $P_1 \land P_2$ |
    |:-----:|:-----:|:---------:|
    | 0     | 0     | 0         |
    | 0     | 1     | 0         |
    | 1     | 0     | 0         |
    | 1     | 1     | 1         |

*   **Disjunction (`∨` or OR):** True if *at least one* of the propositions is true.

    | $P_1$ | $P_2$ | $P_1 \lor P_2$ |
    |:-----:|:-----:|:---------:|
    | 0     | 0     | 0         |
    | 0     | 1     | 1         |
    | 1     | 0     | 1         |
    | 1     | 1     | 1         |

*   **Implication (`→` or "if...then"):** False only when a true premise leads to a false conclusion. This is often the most counter-intuitive operator. The principle is *"ex falso quodlibet"*—from a false premise, anything can follow.

    | $P_1$ | $P_2$ | $P_1 \to P_2$ |
    |:-----:|:-----:|:---------:|
    | 0     | 0     | 1         |
    | 0     | 1     | 1         |
    | 1     | 0     | 0         |
    | 1     | 1     | 1         |

*   **Equivalence (`↔` or "if and only if"):** True only if both propositions have the same truth value.

    | $P_1$ | $P_2$ | $P_1 \leftrightarrow P_2$ |
    |:-----:|:-----:|:-------------------:|
    | 0     | 0     | 1                   |
    | 0     | 1     | 0                   |
    | 1     | 0     | 0                   |
    | 1     | 1     | 1                   |

##### 1.3 Normal Forms
A normal form provides a standardized structure for writing any logical formula. This is useful for simplifying expressions and proving equivalences.

##### 1.4 Disjunctive Normal Form (DNF)
The DNF of a formula is a **disjunction of conjuncts** (a series of AND-terms joined by ORs). Think of it as identifying every condition that makes the formula *true*.

*   **Algorithm to find DNF from a truth table:**
    1.  **Select Rows:** Identify all rows in the truth table where the final result is `1`.
    2.  **Construct Conjuncts (AND-terms):** For each selected row, create a term by `AND`ing all the variables together.
        *   If a variable's value in that row is `1`, use the variable directly (e.g., `x`).
        *   If a variable's value is `0`, use its negation (e.g., `¬x`).
    3.  **Combine with Disjunctions (ORs):** Join all the conjuncts you created with the `OR` operator. The resulting expression is the DNF.

##### 1.5 Conjunctive Normal Form (CNF)
The CNF of a formula is a **conjunction of disjuncts** (a series of OR-terms joined by ANDs). Think of it as listing all the conditions that *cannot* happen for the formula to be true, effectively ruling out the false cases.

*   **Algorithm to find CNF from a truth table:**
    1.  **Select Rows:** Identify all rows where the final result is `0`.
    2.  **Construct Disjuncts (OR-terms):** For each selected row, create a term by `OR`ing all the variables together. This step uses an *inverted* logic compared to DNF:
        *   If a variable's value in that row is `0`, use the variable directly (e.g., `x`).
        *   If a variable's value is `1`, use its negation (e.g., `¬x`).
    3.  **Combine with Conjunctions (ANDs):** Join all the disjuncts you created with the `AND` operator. This expression is the CNF.

#### 2. Definitions

*   **Proposition**: A statement that is either true (`1`) or false (`0`).
*   **Literal**: A variable (e.g., $x$) or its negation (e.g., $\neg x$).
*   **Conjunct (Minterm)**: A conjunction (AND) of one or more literals, such as $(x_1 \land \neg x_2)$. This corresponds to a single row that evaluates to `1` in a truth table.
*   **Disjunct (Maxterm)**: A disjunction (OR) of one or more literals, such as $(x_1 \lor \neg x_2)$. This corresponds to a single row that evaluates to `0` in a truth table.
*   **Disjunctive Normal Form (DNF)**: A formula expressed as a disjunction of conjuncts (an OR of ANDs).
*   **Conjunctive Normal Form (CNF)**: A formula expressed as a conjunction of disjuncts (an AND of ORs).

#### 3. Formulas

*   **General Formula for DNF:** For a function $f(x_1, \dots, x_n)$, the DNF is the disjunction of all minterms that make the function true.
    $$ f(x_1, \dots, x_n) = \bigvee_{f(\sigma_1, \dots, \sigma_n)=1} (x_1^{\sigma_1} \land \dots \land x_n^{\sigma_n}) $$
    Where $x^1 = x$ and $x^0 = \neg x$.

*   **General Formula for CNF:** For a function $f(x_1, \dots, x_n)$, the CNF is the conjunction of all maxterms that make the function false.
    $$ f(x_1, \dots, x_n) = \bigwedge_{f(\sigma_1, \dots, \sigma_n)=0} (x_1^{\bar{\sigma_1}} \lor \dots \lor x_n^{\bar{\sigma_n}}) $$
    Where $x^{\bar{1}} = \neg x$ and $x^{\bar{0}} = x$.

#### 4. Mistakes

*   **Mixing up DNF and CNF rules:** A common error is using the variable rules for DNF (e.g., `0` becomes `¬x`) when constructing the terms for CNF. **Why it's wrong:** The rules are inverted. For CNF, you focus on the '0' outcomes, and a variable value of '0' corresponds to the positive literal `x` in the disjunct.

*   **Incorrectly connecting terms:** Using `AND` to connect terms in a DNF or `OR` to connect terms in a CNF. **Why it's wrong:** DNF is a disjunction (OR) of conjuncts. CNF is a conjunction (AND) of disjuncts. The outermost operator must match the form's name.

*   **Misinterpreting Implication ($P \to Q$):** Believing that if the premise $P$ is false, the entire statement must be false. **Why it's wrong:** In classical logic, a false premise can imply anything. The only way for an implication to be false is for a true premise to lead to a false conclusion (`1 → 0`).

*   **Ignoring Operator Precedence:** Evaluating a formula like $p \land q \lor r$ from left to right without respecting precedence. **Why it's wrong:** Logical operators have a defined order of operations, typically `¬` first, then `∧`, then `∨`, and finally `→` and `↔`. The expression should be evaluated as $(p \land q) \lor r$.

#### 5. Examples

##### Example 1
**Question:** Obtain both DNF and CNF for the truth table $T(x, y) = (1001)$.

<details>
<summary>Click to see the solution</summary>

1.  **Construct the full truth table:**
    The sequence (1001) corresponds to the output column for inputs (00, 01, 10, 11).

    | x | y | T(x,y) |
    |:---:|:---:|:---:|
    | 0 | 0 | **1**    |
    | 0 | 1 | 0    |
    | 1 | 0 | 0    |
    | 1 | 1 | **1**    |

2.  **Derive the DNF (from rows that are `1`):**
    *   **Row 1 (x=0, y=0):** Variables are `0`, so we use their negations. The conjunct is $(\neg x \land \neg y)$.
    *   **Row 4 (x=1, y=1):** Variables are `1`, so we use them directly. The conjunct is $(x \land y)$.
    *   Combine the conjuncts with `OR`.

    **Answer (DNF):** $(\neg x \land \neg y) \lor (x \land y)$

3.  **Derive the CNF (from rows that are `0`):**
    *   **Row 2 (x=0, y=1):** `x` is `0` (use $x$), `y` is `1` (use $\neg y$). The disjunct is $(x \lor \neg y)$.
    *   **Row 3 (x=1, y=0):** `x` is `1` (use $\neg x$), `y` is `0` (use $y$). The disjunct is $(\neg x \lor y)$.
    *   Combine the disjuncts with `AND`.

    **Answer (CNF):** $(x \lor \neg y) \land (\neg x \lor y)$
</details>

##### Example 2
**Question:** Obtain both DNF and CNF for the truth table $T(x_1, x_2) = (0100)$.

<details>
<summary>Click to see the solution</summary>

1.  **Construct the full truth table:**

    | $x_1$ | $x_2$ | T($x_1, x_2$) |
    |:---:|:---:|:---:|
    | 0 | 0 | 0 |
    | 0 | 1 | **1** |
    | 1 | 0 | 0 |
    | 1 | 1 | 0 |

2.  **Derive the DNF (from the single row that is `1`):**
    *   **Row 2 ($x_1=0, x_2=1$):** `x1` is `0` ($\neg x_1$), `x2` is `1` ($x_2$). The conjunct is $(\neg x_1 \land x_2)$.
    *   Since there is only one term, no `OR` is needed.

    **Answer (DNF):** $(\neg x_1 \land x_2)$

3.  **Derive the CNF (from rows that are `0`):**
    *   **Row 1 ($x_1=0, x_2=0$):** `x1` is `0` ($x_1$), `x2` is `0` ($x_2$). The disjunct is $(x_1 \lor x_2)$.
    *   **Row 3 ($x_1=1, x_2=0$):** `x1` is `1` ($\neg x_1$), `x2` is `0` ($x_2$). The disjunct is $(\neg x_1 \lor x_2)$.
    *   **Row 4 ($x_1=1, x_2=1$):** `x1` is `1` ($\neg x_1$), `x2` is `1` ($\neg x_2$). The disjunct is $(\neg x_1 \lor \neg x_2)$.
    *   Combine the disjuncts with `AND`.

    **Answer (CNF):** $(x_1 \lor x_2) \land (\neg x_1 \lor x_2) \land (\neg x_1 \lor \neg x_2)$
</details>

##### Example 3
**Question:** Obtain both DNF and CNF for the truth table $T(a, b, c) = (01010110)$.

<details>
<summary>Click to see the solution</summary>

1.  **Construct the full truth table:**

    | a | b | c | T(a,b,c) |
    |:---:|:---:|:---:|:---:|
    | 0 | 0 | 0 | 0 |
    | 0 | 0 | 1 | **1** |
    | 0 | 1 | 0 | 0 |
    | 0 | 1 | 1 | **1** |
    | 1 | 0 | 0 | 0 |
    | 1 | 0 | 1 | **1** |
    | 1 | 1 | 0 | **1** |
    | 1 | 1 | 1 | 0 |

2.  **Derive the DNF (from rows that are `1`):**
    *   **Row 2 (0,0,1):** $(\neg a \land \neg b \land c)$
    *   **Row 4 (0,1,1):** $(\neg a \land b \land c)$
    *   **Row 6 (1,0,1):** $(a \land \neg b \land c)$
    *   **Row 7 (1,1,0):** $(a \land b \land \neg c)$
    *   Combine with `OR`.

    **Answer (DNF):** $(\neg a \land \neg b \land c) \lor (\neg a \land b \land c) \lor (a \land \neg b \land c) \lor (a \land b \land \neg c)$

3.  **Derive the CNF (from rows that are `0`):**
    *   **Row 1 (0,0,0):** $(a \lor b \lor c)$
    *   **Row 3 (0,1,0):** $(a \lor \neg b \lor c)$
    *   **Row 5 (1,0,0):** $(\neg a \lor b \lor c)$
    *   **Row 8 (1,1,1):** $(\neg a \lor \neg b \lor \neg c)$
    *   Combine with `AND`.

    **Answer (CNF):** $(a \lor b \lor c) \land (a \lor \neg b \lor c) \land (\neg a \lor b \lor c) \land (\neg a \lor \neg b \lor \neg c)$
</details>